<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux服务</title>
      <link href="/2023/10/10/linux-fu-wu/"/>
      <url>/2023/10/10/linux-fu-wu/</url>
      
        <content type="html"><![CDATA[<h2 id="contOS更换yum源"><a href="#contOS更换yum源" class="headerlink" title="contOS更换yum源"></a>contOS更换yum源</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># yum install wget -y</span><span class="token comment"># 进入yum配置文件目录（固定的）</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># cd /etc/yum.repos.d/</span><span class="token comment"># 备份CentOS-Base.repo文件</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># mv CentOS-Base.repo CentOS-Base.repo.bak</span><span class="token comment"># 通过wget工具，从阿里云获取配置文件</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><span class="token comment"># 清空yum本地缓存</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># yum clean all</span><span class="token comment"># 制作aliyun缓存</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># yum makecache</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="一、动态主机配置协议DHCP"><a href="#一、动态主机配置协议DHCP" class="headerlink" title="一、动态主机配置协议DHCP"></a>一、动态主机配置协议DHCP</h1><h2 id="1-1-防火墙和selinux设置"><a href="#1-1-防火墙和selinux设置" class="headerlink" title="1.1 防火墙和selinux设置"></a>1.1 防火墙和selinux设置</h2><p><strong>防火墙</strong>     影响通信       默认拒绝所有      只允许 远程登录 和  DHCP客户端通信</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># systemctl stop firewalld.service</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># systemctl disable firewalld.service</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>selinux</strong>  美国NSA国家安全局设计    将Linux中的文件分类并进行标签，让不同的网络服务只能访问自己的文件，而拒绝访问其他文件。单个服务被攻陷时，不会造成数据全部泄露</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># vim /etc/selinux/config</span><span class="token comment"># SELINUX=enforcing</span><span class="token assign-left variable">SELINUX</span><span class="token operator">=</span>disable<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>查看状态</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># systemctl status firewalld.service</span>● firewalld.service - firewalld - dynamic firewall daemon   Loaded: loaded <span class="token punctuation">(</span>/usr/lib/systemd/system/firewalld.service<span class="token punctuation">;</span> disabled<span class="token punctuation">;</span> vendor preset: enabled<span class="token punctuation">)</span>   Active: inactive <span class="token punctuation">(</span>dead<span class="token punctuation">)</span>     Docs: man:firewalld<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># getenforce</span>Disabled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="1-2-DHCP工作原理"><a href="#1-2-DHCP工作原理" class="headerlink" title="1.2 DHCP工作原理"></a>1.2 DHCP工作原理</h2><h3 id="1-2-1-工作方式"><a href="#1-2-1-工作方式" class="headerlink" title="1.2.1 工作方式"></a>1.2.1 工作方式</h3><p><img src="https://shuyancoding.oss-cn-beijing.aliyuncs.com/DHCP%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="image-20231010125635995"></p><ul><li>Client：向网络中发送广播，通过自己的UDP协议的68号端口向网络中发送DHCP Discover包，用来寻找网络中的DHCP Server。</li><li>Server：局域网中的所有DHCP服务器都能收到该Client发送的广播包，然后DHCP Server会检查自己的IP池中(也叫做作用域)是否还有可用IP可以分发。<ul><li>如果有，直接将这个IP地址从池中拿出来，避免在发给别的客户端，并且通过自己的UDP协议的67号端口给Client发一个响应包DHCP Offer，同样采用广播，明确告诉其可以提供哪个IP给Client使用。</li></ul></li><li>Client：Client会收到局域网中的所有DHCP服务器发给自己的DHCP Offer包，默认选一个最优的DHCP Server进行IP获取(在这里就是第一个发送给他DHCP Offer的服务器算作最优)。然后继续向网络中通过UDP的68号端口发广播DHCP Resquest，明确指定DHCP Server IP地址和需要租用的IP地址告诉它要从他这里获得IP信息。自然其他DHCP Server也能收到广播，确认不从自己这里拿IP信息后，会将上步从IP池中拿出来的IP在释放到池中，以便别人使用。</li><li>Server：被确认的DHCP Server就会通过其UDP协议的67号端口发送DHCP ACK确认包，采用广播将IP、掩码、网关、DNS等信息还有IP租约一起发送给DHCP Client, Client确认IP可用后，根据IP租约开始计算使用时间。</li></ul><h3 id="1-2-2-计算机获取IP的时间点"><a href="#1-2-2-计算机获取IP的时间点" class="headerlink" title="1.2.2 计算机获取IP的时间点"></a>1.2.2 计算机获取IP的时间点</h3><ul><li>计算机开机</li><li>网卡接通服务</li><li>重启网卡服务</li></ul><h3 id="1-2-3-租约更新阶段"><a href="#1-2-3-租约更新阶段" class="headerlink" title="1.2.3 租约更新阶段"></a>1.2.3 租约更新阶段</h3><ul><li>租约完成1/2</li><li>租约完成7/8</li><li>租约到期</li></ul><h2 id="二、DHCP-部署"><a href="#二、DHCP-部署" class="headerlink" title="二、DHCP 部署"></a>二、DHCP 部署</h2><h3 id="2-1-server端配置："><a href="#2-1-server端配置：" class="headerlink" title="2.1 server端配置："></a>2.1 server端配置：</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装dhcp</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># yum install dhcp -y</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="查看主配文件"><a href="#查看主配文件" class="headerlink" title="查看主配文件"></a>查看主配文件</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看主配文件</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># ls</span>dhclient.d  dhclient-exit-hooks.d  dhcpd6.conf  dhcpd.conf  scripts<span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># cat dhcpd.conf </span><span class="token comment">#</span><span class="token comment"># DHCP Server Configuration file.</span><span class="token comment">#   see /usr/share/doc/dhcp*/dhcpd.conf.example</span><span class="token comment">#   see dhcpd.conf(5) man page</span><span class="token comment">#</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># cp /usr/share/doc/dhcp*/dhcpd.conf.example /etc/dhcp/dhcpd.conf</span>cp：是否覆盖<span class="token string">"/etc/dhcp/dhcpd.conf"</span>？ y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="主配文件内容"><a href="#主配文件内容" class="headerlink" title="主配文件内容"></a>主配文件内容</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># cat dhcpd.conf </span><span class="token comment"># dhcpd.conf</span><span class="token comment">#</span><span class="token comment"># Sample configuration file for ISC dhcpd</span><span class="token comment">#</span><span class="token comment">#DNS全局选项，指定DNS服务器的地址，可以是IP，也可以是域名。</span><span class="token comment"># option definitions common to all supported networks...</span><span class="token comment"># DNS的域名</span>option domain-name <span class="token string">"example.org"</span><span class="token punctuation">;</span><span class="token comment">#具体的DNS服务器</span>option domain-name-servers ns1.example.org, ns2.example.org<span class="token punctuation">;</span><span class="token comment">#默认租约为600s</span>default-lease-time <span class="token number">600</span><span class="token punctuation">;</span><span class="token comment">#最大租约为7200s，客户机会在default-lease-time快到期时向服务器续租，如果此时客户机死机/重启，而默认租约时间到期了，服务器并不会立即回收IP地址，而是等到最大租约时间到期，客户机还没有过来续约，才会回收IP地址。</span>max-lease-time <span class="token number">7200</span><span class="token punctuation">;</span><span class="token comment">#动态DNS更新方式(none:不支持；interim:互动更新模式；ad-hoc:特殊更新模式)</span><span class="token comment"># Use this to enble / disable dynamic dns updates globally.</span><span class="token comment">#ddns-update-style none;</span><span class="token comment">#如果该DHCP服务器是本地官方DHCP就将此选项打开，避免其他DHCP服务器的干扰。</span><span class="token comment">#当一个客户端试图获得一个不是该DHCP服务器分配的IP信息，DHCP将发送一个拒绝消息，而不会等待请求超时。当请求被拒绝，客户端会重新向当前DHCP发送IP请求获得新地址。保证IP是自己发出去的</span><span class="token comment">#</span><span class="token comment"># If this DHCP server is the official DHCP server for the local</span><span class="token comment"># network, the authoritative directive should be uncommented.</span><span class="token comment">#authoritative;</span><span class="token comment"># Use this to send dhcp log messages to a different log file (you also</span><span class="token comment"># have to hack syslog.conf to complete the redirection).</span><span class="token comment"># 日志级别为local17</span>log-facility local7<span class="token punctuation">;</span><span class="token comment"># No service will be given on this subnet, but declaring it helps the </span><span class="token comment"># DHCP server to understand the network topology.</span><span class="token comment">#作用域相关设置指令</span><span class="token comment">#subnet 定义一个作用域（发送的ip地址范围）</span><span class="token comment">#netmask 定义作用域的掩码</span><span class="token comment">#range 允许发放的IP范围</span><span class="token comment">#option routers 指定网关地址</span><span class="token comment">#option domain-name-servers 指定DNS服务器地址</span><span class="token comment">#option broadcast-address 广播地址</span><span class="token comment">#</span><span class="token comment">#</span><span class="token comment">#案例:定义一个作用域 网段为10.152.187.0 掩码为255.255.255.0</span><span class="token comment">#此作用域不提供任何服务</span>subnet <span class="token number">10.152</span>.187.0 netmask <span class="token number">255.255</span>.255.0 <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment"># This is a very basic subnet declaration.</span><span class="token comment">#案例:定义一个基本的作用域</span><span class="token comment">#网段10.254.239.0 掩码255.255.255.224</span><span class="token comment">#分发范围10.254.239.10-20</span><span class="token comment">#网关为rtr-239-0-1.example.org, rtr-239-0-2.example.org</span>subnet <span class="token number">10.254</span>.239.0 netmask <span class="token number">255.255</span>.255.224 <span class="token punctuation">{</span>  range <span class="token number">10.254</span>.239.10 <span class="token number">10.254</span>.239.20<span class="token punctuation">;</span>  option routers rtr-239-0-1.example.org, rtr-239-0-2.example.org<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment"># This declaration allows BOOTP clients to get dynamic addresses,</span><span class="token comment"># which we don't really recommend.</span><span class="token comment">#案例:允许采用bootp协议的客户端动态获得地址</span><span class="token comment">#bootp DHCP的前身</span><span class="token comment">#BOOTP用于无盘工作站的局域网中，可以让无盘工作站从一个中心服务器上获得IP地址。通过BOOTP协议可以为局域网中的无盘工作站分配动态IP地址，</span><span class="token comment">#这样就不需要管理员去为每个用户去设置静态IP地址。</span>subnet <span class="token number">10.254</span>.239.32 netmask <span class="token number">255.255</span>.255.224 <span class="token punctuation">{</span>  range dynamic-bootp <span class="token number">10.254</span>.239.40 <span class="token number">10.254</span>.239.60<span class="token punctuation">;</span>  option broadcast-address <span class="token number">10.254</span>.239.31<span class="token punctuation">;</span>  option routers rtr-239-32-1.example.org<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">#案例:一个简单的作用域案例</span><span class="token comment"># A slightly different configuration for an internal subnet.</span>subnet <span class="token number">10.5</span>.5.0 netmask <span class="token number">255.255</span>.255.224 <span class="token punctuation">{</span>  range <span class="token number">10.5</span>.5.26 <span class="token number">10.5</span>.5.30<span class="token punctuation">;</span>  option domain-name-servers ns1.internal.example.org<span class="token punctuation">;</span>  option domain-name <span class="token string">"internal.example.org"</span><span class="token punctuation">;</span>  option routers <span class="token number">10.5</span>.5.1<span class="token punctuation">;</span>  option broadcast-address <span class="token number">10.5</span>.5.31<span class="token punctuation">;</span>  default-lease-time <span class="token number">600</span><span class="token punctuation">;</span>  max-lease-time <span class="token number">7200</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment"># Hosts which require special configuration options can be listed in</span><span class="token comment"># host statements.   If no address is specified, the address will be</span><span class="token comment"># allocated dynamically (if possible), but the host-specific information</span><span class="token comment"># will still come from the host declaration.</span><span class="token comment">#</span><span class="token comment">#保留地址:可以将指定的IP分发给指定的机器，根据网卡的MAC地址来做触发</span><span class="token comment">#host: 启用保留。</span><span class="token comment">#hardware:指定客户端的mac地址</span><span class="token comment">#filename:指定文件名</span><span class="token comment">#server-name:指定下一跳服务器地址</span><span class="token comment">#fixed-address: 指定保留IP地址</span><span class="token comment">#</span><span class="token comment">#</span><span class="token comment">#案例:这个案例中分发给客户端的不是IP地址信息，而是告诉客户端去找toccata.fugue.com服务器，并且下载vmunix.passacaglia文件</span><span class="token function">host</span> passacaglia <span class="token punctuation">{</span>  hardware ethernet <span class="token number">0</span>:0:c0:5d:bd:95<span class="token punctuation">;</span>  filename <span class="token string">"vmunix.passacaglia"</span><span class="token punctuation">;</span>  server-name <span class="token string">"toccata.fugue.com"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment"># Fixed IP addresses can also be specified for hosts.   These addresses</span><span class="token comment"># should not also be listed as being available for dynamic assignment.</span><span class="token comment"># Hosts for which fixed IP addresses have been specified can boot using</span><span class="token comment"># BOOTP or DHCP.   Hosts for which no fixed address is specified can only</span><span class="token comment"># be booted with DHCP, unless there is an address range on the subnet</span><span class="token comment"># to which a BOOTP client is connected which has the dynamic-bootp flag</span><span class="token comment"># set.</span><span class="token comment"># 案例:保留地址，将指定IP(fantasia.fugue.com对应的IP)分给指定客户端网卡(MAC:08:00:07:26:c0:a5)</span><span class="token function">host</span> fantasia <span class="token punctuation">{</span>  hardware ethernet 08:00:07:26:c0:a5<span class="token punctuation">;</span>  fixed-address fantasia.fugue.com<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">#超级作用域</span><span class="token comment">#超级作用域是DHCP服务中的一种管理功能，使用超级作用域，可以将多个作用域组合为单个管理实体。</span><span class="token comment"># You can declare a class of clients and then do address allocation</span><span class="token comment"># based on that.   The example below shows a case where all clients</span><span class="token comment"># in a certain class get addresses on the 10.17.224/24 subnet, and all</span><span class="token comment"># other clients get addresses on the 10.0.29/24 subnet.</span><span class="token comment">#在局域网中，可以配置策略根据各个机器的具体信息分配IP地址和其他的网络参数，客户机的具体信息：客户机能够给dhcp服务提供的信息由有两个，</span><span class="token comment">#第一个就是网卡的dhcp-client-identifier（mac地址），</span><span class="token comment">#第二个就是设备的vendor-class-identifier。</span><span class="token comment">#管理员可以根据这两个信息给不同的机器分组。</span><span class="token comment">#案例:</span><span class="token comment">#按client某种类型分组DHCP,而不是按物理接口网段</span><span class="token comment">#例子: SUNW 分配地址段10.17.224.0/24</span><span class="token comment"># 非SUNW的主机,分配地址段10.0.29.0/24</span><span class="token comment">#定义一个dhcp类:foo</span><span class="token comment">#request广播中vendor-class-identifier字段对应的值前四个字节如果是"SUNW",则视合法客户端.</span>class <span class="token string">"foo"</span> <span class="token punctuation">{</span>  match <span class="token keyword">if</span> substring <span class="token punctuation">(</span>option vendor-class-identifier, <span class="token number">0</span>, <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">"SUNW"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">#定义一个超级作用域: 224-29</span>shared-network <span class="token number">224</span>-29 <span class="token punctuation">{</span><span class="token comment">#定义第一个作用域</span>  subnet <span class="token number">10.17</span>.224.0 netmask <span class="token number">255.255</span>.255.0 <span class="token punctuation">{</span>    option routers rtr-224.example.org<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token comment">#定义第二个作用域</span>  subnet <span class="token number">10.0</span>.29.0 netmask <span class="token number">255.255</span>.255.0 <span class="token punctuation">{</span>    option routers rtr-29.example.org<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token comment">#关连池,如果客户端匹配foo类，将获得该池地址</span>  pool <span class="token punctuation">{</span>    allow members of <span class="token string">"foo"</span><span class="token punctuation">;</span>    range <span class="token number">10.17</span>.224.10 <span class="token number">10.17</span>.224.250<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token comment">#关连池,如果客户端配置foo类，则拒绝获得该段地址</span>  pool <span class="token punctuation">{</span>    deny members of <span class="token string">"foo"</span><span class="token punctuation">;</span>    range <span class="token number">10.0</span>.29.10 <span class="token number">10.0</span>.29.230<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-DHCP启动"><a href="#2-2-DHCP启动" class="headerlink" title="2.2 DHCP启动"></a>2.2 DHCP启动</h3><p>启动DHCP服务：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># systemctl enable dhcpd</span>Created symlink from /etc/systemd/system/multi-user.target.wants/dhcpd.service to /usr/lib/systemd/system/dhcpd.service.<span class="token comment"># 没有有效作用域，即没有和服务器本地网段相同网段的作用域，因此无法启动</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># systemctl start dhcpd</span>Job <span class="token keyword">for</span> dhcpd.service failed because the control process exited with error code. See <span class="token string">"systemctl status dhcpd.service"</span> and <span class="token string">"journalctl -xe"</span> <span class="token keyword">for</span> details.<span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># vim dhcpd.conf</span><span class="token punctuation">..</span>.<span class="token comment"># 设置与本地网段相同的作用域</span>  subnet <span class="token number">192.168</span>.133.0 netmask <span class="token number">255.255</span>.255.0 <span class="token punctuation">{</span>  <span class="token punctuation">}</span><span class="token punctuation">..</span>.<span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># systemctl start dhcpd</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># lsof -i :67</span>COMMAND  PID   <span class="token environment constant">USER</span>   FD   TYPE DEVICE SIZE/OFF NODE NAMEdnsmasq <span class="token number">1488</span> nobody    3u  IPv4  <span class="token number">29621</span>      0t0  UDP *:bootps dhcpd   <span class="token number">6035</span>  dhcpd    7u  IPv4  <span class="token number">72692</span>      0t0  UDP *:bootps <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-3-作用域"><a href="#2-3-作用域" class="headerlink" title="2.3 作用域"></a>2.3 作用域</h2><p>修改配置文件，设置作用域：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># vim dhcpd.conf </span><span class="token comment"># If this DHCP server is the official DHCP server for the local</span><span class="token comment"># network, the authoritative directive should be uncommented.</span>authoritative<span class="token punctuation">;</span><span class="token comment"># A slightly different configuration for an internal subnet.</span>subnet <span class="token number">192.168</span>.133.0 netmask <span class="token number">255.255</span>.255.0 <span class="token punctuation">{</span>  range <span class="token number">192.168</span>.133.153 <span class="token number">192.168</span>.133.252<span class="token punctuation">;</span>  option domain-name-servers <span class="token number">202.106</span>.0.20, <span class="token number">114.114</span>.114.114<span class="token punctuation">;</span>  option routers <span class="token number">192.168</span>.133.254<span class="token punctuation">;</span>  option broadcast-address <span class="token number">192.168</span>.11.255<span class="token punctuation">;</span>  default-lease-time <span class="token number">7200</span><span class="token punctuation">;</span>  max-lease-time <span class="token number">10800</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启dhcp服务，生效配置：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># systemctl restart dhcpd</span><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># lsof -i :67</span>COMMAND  PID   <span class="token environment constant">USER</span>   FD   TYPE DEVICE SIZE/OFF NODE NAMEdnsmasq <span class="token number">1488</span> nobody    3u  IPv4  <span class="token number">29621</span>      0t0  UDP *:bootps dhcpd   <span class="token number">6292</span>  dhcpd    7u  IPv4  <span class="token number">60915</span>      0t0  UDP *:bootps <span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># lsof -i :68</span>COMMAND   PID <span class="token environment constant">USER</span>   FD   TYPE DEVICE SIZE/OFF NODE NAMEdhclient <span class="token number">4183</span> root    6u  IPv4  <span class="token number">52360</span>      0t0  UDP *:bootpc <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-4-client端"><a href="#2-4-client端" class="headerlink" title="2.4 client端"></a>2.4 client端</h2><p>查看一下当前eth0的IP地址、MAC地址，并保证其IP获得方式为:DHCP：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0</span>eth0      Link encap:Ethernet  HWaddr 00:0C:29:1A:F8:BD            inet addr:172.16.44.132  Bcast:172.16.44.255  Mask:255.255.255.0          inet6 addr: fe80::20c:29ff:fe1a:f8bd/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:86 errors:0 dropped:0 overruns:0 frame:0          TX packets:63 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:15294 <span class="token punctuation">(</span><span class="token number">14.9</span> KiB<span class="token punctuation">)</span>  TX bytes:6769 <span class="token punctuation">(</span><span class="token number">6.6</span> KiB<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用dhclient命令来获得IP，查看重要输出:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># dhclient -d eth0</span>Internet Systems Consortium DHCP Client <span class="token number">4.1</span>.1-P1Copyright <span class="token number">2004</span>-2010 Internet Systems Consortium.All rights reserved.For info, please visit https://www.isc.org/software/dhcp/Listening on LPF/eth0/00:0c:29:1a:f8:bdSending on   LPF/eth0/00:0c:29:1a:f8:bdSending on   Socket/fallbackDHCPDISCOVER on eth0 to <span class="token number">255.255</span>.255.255 port <span class="token number">67</span> interval <span class="token number">6</span> <span class="token punctuation">(</span>xid<span class="token operator">=</span>0x316768c3<span class="token punctuation">)</span>      发广播寻找DHCP服务器DHCPOFFER from <span class="token number">192.168</span>.11.16                                                     <span class="token number">192.168</span>.11.16DHCP服务器应答DHCPREQUEST on eth0 to <span class="token number">255.255</span>.255.255 port <span class="token number">67</span> <span class="token punctuation">(</span>xid<span class="token operator">=</span>0x316768c3<span class="token punctuation">)</span>                  client向服务器请求IP地址DHCPACK from <span class="token number">192.168</span>.11.16 <span class="token punctuation">(</span>xid<span class="token operator">=</span>0x316768c3<span class="token punctuation">)</span>                                      确认租赁关系bound to <span class="token number">192.168</span>.11.156 -- renewal <span class="token keyword">in</span> <span class="token number">2983</span> seconds.                              client分得IP:192.168.11.156注意：看到这些信息后，按CTRL+C退出。dhclient是一个DHCP协议客户端，它使用DHCP协议或者BOOTP协议或在这两个协议都不可用时使用静态地址来配置一个或多个网络接口dhclient -r 释放IP地址dhclient -d 强制dhclient作为前台进程运行。 通常情况下，DHCP客户端将在前台运行,直到配置了一个接口,此时它将恢复为在后            台运行。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>服务器日志查看验证获取信息：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@zutuanxue ~<span class="token punctuation">]</span><span class="token comment"># tailf /var/log/messages</span>Feb <span class="token number">21</span> <span class="token number">13</span>:40:44 baism dhcpd: DHCPDISCOVER from 00:0c:29:1a:f8:bd via ens33Feb <span class="token number">21</span> <span class="token number">13</span>:40:45 baism dhcpd: DHCPOFFER on <span class="token number">192.168</span>.11.156 to 00:0c:29:1a:f8:bd via ens33Feb <span class="token number">21</span> <span class="token number">13</span>:40:45 baism dhcpd: DHCPREQUEST <span class="token keyword">for</span> <span class="token number">192.168</span>.11.156 <span class="token punctuation">(</span><span class="token number">192.168</span>.11.16<span class="token punctuation">)</span> from 00:0c:29:1a:f8:bd via ens33Feb <span class="token number">21</span> <span class="token number">13</span>:40:45 baism dhcpd: DHCPACK on <span class="token number">192.168</span>.11.156 to 00:0c:29:1a:f8:bd via ens33<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在client上通过ifconfig命令再次查看eth0 IP地址，验证是否为192.168.11.156：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0</span>eth0      Link encap:Ethernet  HWaddr 00:0C:29:1A:F8:BD            inet addr:192.168.11.156  Bcast:192.168.11.255  Mask:255.255.255.0          inet6 addr: fe80::20c:29ff:fe1a:f8bd/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:97 errors:0 dropped:0 overruns:0 frame:0          TX packets:67 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:17364 <span class="token punctuation">(</span><span class="token number">16.9</span> KiB<span class="token punctuation">)</span>  TX bytes:7537 <span class="token punctuation">(</span><span class="token number">7.3</span> KiB<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看网关，确定网关为192.168.11.254：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># route -n</span>Kernel IP routing tableDestination     Gateway         Genmask         Flags Metric Ref    Use Iface<span class="token number">192.168</span>.11.0    <span class="token number">0.0</span>.0.0         <span class="token number">255.255</span>.255.0   U     <span class="token number">0</span>      <span class="token number">0</span>        <span class="token number">0</span> eth1<span class="token number">192.168</span>.11.0    <span class="token number">0.0</span>.0.0         <span class="token number">255.255</span>.255.0   U     <span class="token number">0</span>      <span class="token number">0</span>        <span class="token number">0</span> eth0<span class="token number">169.254</span>.0.0     <span class="token number">0.0</span>.0.0         <span class="token number">255.255</span>.0.0     U     <span class="token number">1003</span>   <span class="token number">0</span>        <span class="token number">0</span> eth1<span class="token number">0.0</span>.0.0         <span class="token number">192.168</span>.11.254  <span class="token number">0.0</span>.0.0         UG    <span class="token number">0</span>      <span class="token number">0</span>        <span class="token number">0</span> eth0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看DNS配置文件，看DNS是否为DHCP服务器发放的DNS服务器IP：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># cat /etc/resolv.conf </span><span class="token punctuation">;</span> generated by /sbin/dhclient-scriptnameserver <span class="token number">202.106</span>.0.20nameserver <span class="token number">114.114</span>.114.114<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-5-查看具体租约"><a href="#2-5-查看具体租约" class="headerlink" title="2.5 查看具体租约"></a>2.5 查看具体租约</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># cat /var/lib/dhcpd/dhcpd.leases</span><span class="token comment"># The format of this file is documented in the dhcpd.leases(5) manual page.</span><span class="token comment"># This lease file was written by isc-dhcp-4.2.5</span>server-duid <span class="token string">"<span class="token entity" title="\000">\000</span><span class="token entity" title="\001">\001</span><span class="token entity" title="\000">\000</span><span class="token entity" title="\001">\001</span>,<span class="token entity" title="\267">\267</span><span class="token entity" title="\234">\234</span><span class="token entity" title="\316">\316</span><span class="token entity" title="\000">\000</span><span class="token entity" title="\014">\014</span>)<span class="token entity" title="\211">\211</span><span class="token entity" title="\270">\270</span><span class="token entity" title="\352">\352</span>"</span><span class="token punctuation">;</span>lease <span class="token number">192.168</span>.133.153 <span class="token punctuation">{</span>  starts <span class="token number">2</span> <span class="token number">2023</span>/10/14 04:21:04<span class="token punctuation">;</span><span class="token comment">#开始时间</span>  ends <span class="token number">2</span> <span class="token number">2023</span>/10/14 06:21:04<span class="token punctuation">;</span><span class="token comment">#结束时间</span>  cltt <span class="token number">2</span> <span class="token number">2023</span>/10/14 04:21:04<span class="token punctuation">;</span>  binding state active<span class="token punctuation">;</span>  next binding state <span class="token function">free</span><span class="token punctuation">;</span>  rewind binding state <span class="token function">free</span><span class="token punctuation">;</span>  hardware ethernet 00:0c:29:6d:1c:b3<span class="token punctuation">;</span>  uid <span class="token string">"<span class="token entity" title="\001">\001</span><span class="token entity" title="\000">\000</span><span class="token entity" title="\014">\014</span>)m<span class="token entity" title="\034">\034</span><span class="token entity" title="\263">\263</span>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-6、保留IP"><a href="#2-6、保留IP" class="headerlink" title="2.6、保留IP"></a>2.6、保留IP</h2><p>​    在IP租约到期后，如果无法续订租约，client只能乖乖交出IP地址，重新获得一个其他IP使用。但是在公司有些服务器的IP地址是不能变化的，因为变了用户就无法连接到服务器了，比如公司文件服务器、打印服务器等等。那么在这种环境中我们既想使用DHCP管理公司IP，又想实现部分机器的IP永久不变，那么怎么实现呢。</p><p>​    DHCP的作者在写DHCP的时候也想到了这个问题，提出了保留IP的概念，就是将某些IP保留，然后服务器来获得IP的时候，根据其MAC地址做匹配，将对应的IP分给它即可。</p><p><strong>案例</strong>：</p><p>在配置文件/etc/dhcp/dhcpd.conf末尾添加以下内容：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># host print    host为指令，print是个名字</span><span class="token comment"># hardware ethernet 指定以太网网卡MAC地址</span><span class="token comment"># fixed-address 指定要绑定的IP</span><span class="token function">host</span> print <span class="token punctuation">{</span>           hardware ethernet 00:0C:29:1A:F8:C7<span class="token punctuation">;</span>  fixed-address <span class="token number">192.168</span>.11.252<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启DHCP服务：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># systemctl restart dhcpd</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>登陆测试机进行测试，释放当前IP，重新获得新的IP，查看IP地址是否正确分发：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># ifconfig eth1</span>eth1      Link encap:Ethernet  HWaddr 00:0C:29:1A:F8:C7            inet addr:192.168.11.155  Bcast:192.168.11.255  Mask:255.255.255.0          inet6 addr: fe80::20c:29ff:fe1a:f8c7/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:4071 errors:0 dropped:0 overruns:0 frame:0          TX packets:187 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:433880 <span class="token punctuation">(</span><span class="token number">423.7</span> KiB<span class="token punctuation">)</span>  TX bytes:16888 <span class="token punctuation">(</span><span class="token number">16.4</span> KiB<span class="token punctuation">)</span><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># dhclient -r eth1</span><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># dhclient -d eth1</span>Internet Systems Consortium DHCP Client <span class="token number">4.1</span>.1-P1Copyright <span class="token number">2004</span>-2010 Internet Systems Consortium.All rights reserved.For info, please visit https://www.isc.org/software/dhcp/Listening on LPF/eth1/00:0c:29:1a:f8:c7Sending on   LPF/eth1/00:0c:29:1a:f8:c7Sending on   Socket/fallbackDHCPDISCOVER on eth1 to <span class="token number">255.255</span>.255.255 port <span class="token number">67</span> interval <span class="token number">4</span> <span class="token punctuation">(</span>xid<span class="token operator">=</span>0x45c162c2<span class="token punctuation">)</span>DHCPOFFER from <span class="token number">192.168</span>.11.16DHCPREQUEST on eth1 to <span class="token number">255.255</span>.255.255 port <span class="token number">67</span> <span class="token punctuation">(</span>xid<span class="token operator">=</span>0x45c162c2<span class="token punctuation">)</span>DHCPACK from <span class="token number">192.168</span>.11.16 <span class="token punctuation">(</span>xid<span class="token operator">=</span>0x45c162c2<span class="token punctuation">)</span>bound to <span class="token number">192.168</span>.11.252 -- renewal <span class="token keyword">in</span> <span class="token number">2881</span> seconds.^C<span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># ifconfig eth1</span>eth1      Link encap:Ethernet  HWaddr 00:0C:29:1A:F8:C7            inet addr:192.168.11.252  Bcast:192.168.11.255  Mask:255.255.255.0          inet6 addr: fe80::20c:29ff:fe1a:f8c7/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:4081 errors:0 dropped:0 overruns:0 frame:0          TX packets:191 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:436337 <span class="token punctuation">(</span><span class="token number">426.1</span> KiB<span class="token punctuation">)</span>  TX bytes:17656 <span class="token punctuation">(</span><span class="token number">17.2</span> KiB<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-7、DHCP超级作用域"><a href="#2-7、DHCP超级作用域" class="headerlink" title="2.7、DHCP超级作用域"></a>2.7、DHCP超级作用域</h2><p><strong>案例:部署一个超级作用域，作用域是192.168.11.0/24网段，192.168.12.0/24网段。</strong></p><p>编辑配置文件:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment">#  cat /etc/dhcp/dhcpd.conf</span>option domain-name-servers <span class="token number">4.2</span>.2.2, <span class="token number">4.2</span>.2.1<span class="token punctuation">;</span>default-lease-time <span class="token number">28800</span><span class="token punctuation">;</span>max-lease-time <span class="token number">43200</span><span class="token punctuation">;</span><span class="token comment">#authoritative;</span>log-facility local7<span class="token punctuation">;</span><span class="token comment">#share-network 部署一个超级作用域</span><span class="token comment">#supper 超级作用域名称，随便起，但是建议有意义。</span>shared-network supper <span class="token punctuation">{</span>    <span class="token comment">#192.168.11.0作用域</span>    subnet <span class="token number">192.168</span>.11.0 netmask <span class="token number">255.255</span>.255.0 <span class="token punctuation">{</span>        range <span class="token number">192.168</span>.11.150 <span class="token number">192.168</span>.11.150<span class="token punctuation">;</span>        option domain-name-servers <span class="token number">202.106</span>.0.20, <span class="token number">114.114</span>.114.114<span class="token punctuation">;</span>        option routers <span class="token number">192.168</span>.11.254<span class="token punctuation">;</span>        default-lease-time <span class="token number">7200</span><span class="token punctuation">;</span>        max-lease-time <span class="token number">10800</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">#192.168.12.0作用域</span>    subnet <span class="token number">192.168</span>.12.0 netmask <span class="token number">255.255</span>.255.0 <span class="token punctuation">{</span>        range <span class="token number">192.168</span>.12.150 <span class="token number">192.168</span>.12.150<span class="token punctuation">;</span>        option domain-name-servers <span class="token number">202.106</span>.0.20, <span class="token number">114.114</span>.114.114<span class="token punctuation">;</span>        option routers <span class="token number">192.168</span>.12.254<span class="token punctuation">;</span>        default-lease-time <span class="token number">7200</span><span class="token punctuation">;</span>        max-lease-time <span class="token number">10800</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：案例中为了方便验证，每个作用域只发布一个IP，否则测试无法保证能100%分到两个网段。</p><p>重启DHCP服务，生效配置文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment"># systemctl restart dhcpd</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在客户端进行验证：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 释放两网卡IP</span><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># dhclient -r eth0</span><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># dhclient -r eth1</span><span class="token comment"># 释放成功</span><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># ifconfig</span>eth0      Link encap:Ethernet  HWaddr 00:0C:29:1A:F8:BD            inet6 addr: fe80::20c:29ff:fe1a:f8bd/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:1591 errors:0 dropped:0 overruns:0 frame:0          TX packets:162 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:282324 <span class="token punctuation">(</span><span class="token number">275.7</span> KiB<span class="token punctuation">)</span>  TX bytes:30619 <span class="token punctuation">(</span><span class="token number">29.9</span> KiB<span class="token punctuation">)</span>eth1      Link encap:Ethernet  HWaddr 00:0C:29:1A:F8:C7            inet6 addr: fe80::20c:29ff:fe1a:f8c7/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:4719 errors:0 dropped:0 overruns:0 frame:0          TX packets:216 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:559954 <span class="token punctuation">(</span><span class="token number">546.8</span> KiB<span class="token punctuation">)</span>  TX bytes:19582 <span class="token punctuation">(</span><span class="token number">19.1</span> KiB<span class="token punctuation">)</span>lo        Link encap:Local Loopback            inet addr:127.0.0.1  Mask:255.0.0.0          inet6 addr: ::1/128 Scope:Host          UP LOOPBACK RUNNING  MTU:16436  Metric:1          RX packets:12 errors:0 dropped:0 overruns:0 frame:0          TX packets:12 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:0           RX bytes:720 <span class="token punctuation">(</span><span class="token number">720.0</span> b<span class="token punctuation">)</span>  TX bytes:720 <span class="token punctuation">(</span><span class="token number">720.0</span> b<span class="token punctuation">)</span><span class="token comment"># 分别获取IP地址 </span><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># dhclient -d eth0</span>Internet Systems Consortium DHCP Client <span class="token number">4.1</span>.1-P1Copyright <span class="token number">2004</span>-2010 Internet Systems Consortium.All rights reserved.For info, please visit https://www.isc.org/software/dhcp/Listening on LPF/eth0/00:0c:29:1a:f8:bdSending on   LPF/eth0/00:0c:29:1a:f8:bdSending on   Socket/fallbackDHCPDISCOVER on eth0 to <span class="token number">255.255</span>.255.255 port <span class="token number">67</span> interval <span class="token number">6</span> <span class="token punctuation">(</span>xid<span class="token operator">=</span>0x2574199a<span class="token punctuation">)</span>DHCPOFFER from <span class="token number">192.168</span>.11.16DHCPREQUEST on eth0 to <span class="token number">255.255</span>.255.255 port <span class="token number">67</span> <span class="token punctuation">(</span>xid<span class="token operator">=</span>0x2574199a<span class="token punctuation">)</span>DHCPACK from <span class="token number">192.168</span>.11.16 <span class="token punctuation">(</span>xid<span class="token operator">=</span>0x2574199a<span class="token punctuation">)</span>bound to <span class="token number">192.168</span>.11.150 -- renewal <span class="token keyword">in</span> <span class="token number">3026</span> seconds.^C<span class="token comment"># 确保都是来自我们实验中的DHCP服务器</span><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># dhclient -d eth1</span>Internet Systems Consortium DHCP Client <span class="token number">4.1</span>.1-P1Copyright <span class="token number">2004</span>-2010 Internet Systems Consortium.All rights reserved.For info, please visit https://www.isc.org/software/dhcp/Listening on LPF/eth1/00:0c:29:1a:f8:c7Sending on   LPF/eth1/00:0c:29:1a:f8:c7Sending on   Socket/fallbackDHCPDISCOVER on eth1 to <span class="token number">255.255</span>.255.255 port <span class="token number">67</span> interval <span class="token number">7</span> <span class="token punctuation">(</span>xid<span class="token operator">=</span>0x2cebde11<span class="token punctuation">)</span>DHCPOFFER from <span class="token number">192.168</span>.11.16DHCPREQUEST on eth1 to <span class="token number">255.255</span>.255.255 port <span class="token number">67</span> <span class="token punctuation">(</span>xid<span class="token operator">=</span>0x2cebde11<span class="token punctuation">)</span>DHCPACK from <span class="token number">192.168</span>.11.16 <span class="token punctuation">(</span>xid<span class="token operator">=</span>0x2cebde11<span class="token punctuation">)</span>bound to <span class="token number">192.168</span>.12.150 -- renewal <span class="token keyword">in</span> <span class="token number">3102</span> seconds.<span class="token comment"># 确保都是来自本地配置的DHCP服务器</span><span class="token comment"># 查看IP情况，发现实验成功了，分别获得到了不同网段IP</span><span class="token punctuation">[</span>root@test 桌面<span class="token punctuation">]</span><span class="token comment"># ifconfig</span>eth0      Link encap:Ethernet  HWaddr 00:0C:29:1A:F8:BD            inet addr:192.168.11.150  Bcast:192.168.11.255  Mask:255.255.255.0          inet6 addr: fe80::20c:29ff:fe1a:f8bd/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:1613 errors:0 dropped:0 overruns:0 frame:0          TX packets:166 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:287076 <span class="token punctuation">(</span><span class="token number">280.3</span> KiB<span class="token punctuation">)</span>  TX bytes:31387 <span class="token punctuation">(</span><span class="token number">30.6</span> KiB<span class="token punctuation">)</span>eth1      Link encap:Ethernet  HWaddr 00:0C:29:1A:F8:C7            inet addr:192.168.12.150  Bcast:192.168.12.255  Mask:255.255.255.0          inet6 addr: fe80::20c:29ff:fe1a:f8c7/64 Scope:Link          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:4741 errors:0 dropped:0 overruns:0 frame:0          TX packets:220 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000           RX bytes:564706 <span class="token punctuation">(</span><span class="token number">551.4</span> KiB<span class="token punctuation">)</span>  TX bytes:20350 <span class="token punctuation">(</span><span class="token number">19.8</span> KiB<span class="token punctuation">)</span>lo        Link encap:Local Loopback            inet addr:127.0.0.1  Mask:255.0.0.0          inet6 addr: ::1/128 Scope:Host          UP LOOPBACK RUNNING  MTU:16436  Metric:1          RX packets:12 errors:0 dropped:0 overruns:0 frame:0          TX packets:12 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:0           RX bytes:720 <span class="token punctuation">(</span><span class="token number">720.0</span> b<span class="token punctuation">)</span>  TX bytes:720 <span class="token punctuation">(</span><span class="token number">720.0</span> b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-8、补充"><a href="#2-8、补充" class="headerlink" title="2.8、补充"></a>2.8、补充</h2><h3 id="2-8-1-如果客户端获得不到-IP会怎么办"><a href="#2-8-1-如果客户端获得不到-IP会怎么办" class="headerlink" title="2.8.1 如果客户端获得不到 IP会怎么办"></a>2.8.1 如果客户端获得不到 IP会怎么办</h3><p>当客户端获得不到IP地址，会得到一个169.254开头的临时IP，此IP不能和其他网段通信，但是Client会继续向网络中发DHCP广播，继续坚持不懈申请IP。</p><h3 id="2-8-2-DHCP会面临单机故障，如何解决"><a href="#2-8-2-DHCP会面临单机故障，如何解决" class="headerlink" title="2.8.2 DHCP会面临单机故障，如何解决"></a>2.8.2 DHCP会面临单机故障，如何解决</h3><p>两台设备互相分发对方网段一段IP，将作用域采用8/2原则，彼此互相冗余，当一台服务器出现问题，不至于整个网段故障。</p><h3 id="2-8-3-抓包验证方法"><a href="#2-8-3-抓包验证方法" class="headerlink" title="2.8.3 抓包验证方法"></a>2.8.3 抓包验证方法</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@localhost dhcp<span class="token punctuation">]</span><span class="token comment">#  tcpdump -nn -vvv -s 1500 -i ens33 host 192.168.11.16 and udp port 67 or udp port 68</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-8-4-如何发放计算机名称"><a href="#2-8-4-如何发放计算机名称" class="headerlink" title="2.8.4 如何发放计算机名称"></a>2.8.4 如何发放计算机名称</h3><p>发放计算机名称只能在保留中完成，要求Client的计算机名配置文件中将对应字段删除。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">option domain-name-servers <span class="token number">4.2</span>.2.2, <span class="token number">4.2</span>.2.1<span class="token punctuation">;</span>default-lease-time <span class="token number">28800</span><span class="token punctuation">;</span>max-lease-time <span class="token number">43200</span><span class="token punctuation">;</span>authoritative<span class="token punctuation">;</span>log-facility local7<span class="token punctuation">;</span>subnet <span class="token number">192.168</span>.11.0 netmask <span class="token number">255.255</span>.255.0 <span class="token punctuation">{</span>  range <span class="token number">192.168</span>.11.153 <span class="token number">192.168</span>.11.252<span class="token punctuation">;</span>  option domain-name-servers <span class="token number">202.106</span>.0.20, <span class="token number">114.114</span>.114.114<span class="token punctuation">;</span>  option routers <span class="token number">192.168</span>.11.254<span class="token punctuation">;</span>  option broadcast-address <span class="token number">192.168</span>.11.255<span class="token punctuation">;</span>  default-lease-time <span class="token number">7200</span><span class="token punctuation">;</span>  max-lease-time <span class="token number">10800</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">host</span> print <span class="token punctuation">{</span>  <span class="token comment">#指定计算机名称</span>  option host-name <span class="token string">"test.hello.com"</span><span class="token punctuation">;</span>  hardware ethernet 00:0c:29:af:f1:84<span class="token punctuation">;</span>  fixed-address <span class="token number">192.168</span>.11.252<span class="token punctuation">;</span><span class="token punctuation">}</span>注意：请把/etc/hostname 中的计算机名称清除      /etc/sysconfig/network中的hostname字段清除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RS21论文笔记</title>
      <link href="/2023/09/28/psi/rs21-lun-wen-bi-ji/"/>
      <url>/2023/09/28/psi/rs21-lun-wen-bi-ji/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> PSI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PSI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git基本命令</title>
      <link href="/2023/09/25/git-ji-ben-ming-ling/"/>
      <url>/2023/09/25/git-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h3 id="一、基本的linux命令"><a href="#一、基本的linux命令" class="headerlink" title="一、基本的linux命令"></a>一、基本的linux命令</h3><p><code>cd</code> 进入某个目录</p><p><code>pwd</code> 显示当前目录路径</p><p><code>ls(ll)</code> 列出当前目录的文件 <code>ll</code>就是<code>ls -l</code>，列出详细信息</p><p><code>touch</code> 新建一个文件</p><p><code>rm</code> 删除要给文件，加上<code>-rf</code>，就是强制删除目录</p><p><code>mkdir</code> 新建一个目录</p><p><code>mv</code> 移动文件，或者是更改文件名称</p><pre class="line-numbers language-none"><code class="language-none">`mv index.html ./aa`，这就是将`index.html`移动到`./aa`目录下。`mv index.html ./aa/bb.html`，这是就是将`index.html`移动到`./aa`目录下并改名为`bb.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>reset</code> 重新初始化终端/清屏</p><p><code>clear</code> 清屏</p><p><code>history</code> 查看命令历史</p><p><code>help</code> 帮助</p><p><code>#</code> 代表注释</p><p><code>cat</code> 显示文件内容</p><h3 id="二、git配置"><a href="#二、git配置" class="headerlink" title="二、git配置"></a>二、git配置</h3><p><code>git config -l</code> 查看当前git环境详细配置</p><h4 id="2-1、查看系统config"><a href="#2-1、查看系统config" class="headerlink" title="2.1、查看系统config"></a>2.1、查看系统config</h4><pre class="line-numbers language-none"><code class="language-none">git config --system --list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置文件在<code>git安装目录/etc/gitconfig</code></p><h4 id="2-2、查看当前用户配置"><a href="#2-2、查看当前用户配置" class="headerlink" title="2.2、查看当前用户配置"></a>2.2、查看当前用户配置</h4><pre class="line-numbers language-none"><code class="language-none">git config --global --list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置文件在<code>~/.gitconfig</code></p><h4 id="2-3、查看当前仓库配置信息"><a href="#2-3、查看当前仓库配置信息" class="headerlink" title="2.3、查看当前仓库配置信息"></a>2.3、查看当前仓库配置信息</h4><pre class="line-numbers language-none"><code class="language-none">git config --local --list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置文件在<code>当前项目的/.git/config</code></p><h4 id="2-4、修改git配置"><a href="#2-4、修改git配置" class="headerlink" title="2.4、修改git配置"></a>2.4、修改git配置</h4><pre class="line-numbers language-none"><code class="language-none">git config [--local][--global][--system] section.key value<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>git config --local user.name huhuhu</code> 设置当前项目的用户名</p><p><code>git config --global core.quotepath false</code> 配置当前用户的编码项，可以解决中文编码问题</p><p><code>git config --local core.ignorecase false</code> 配置当前项目不忽略文件大小写，git默认忽略文件名的大小写，这点值得注意</p><h3 id="三、git基本知识"><a href="#三、git基本知识" class="headerlink" title="三、git基本知识"></a>三、git基本知识</h3><pre class="line-numbers language-none"><code class="language-none">使用远程仓库时候会有多个协议可以选择，使用https不仅仅速度慢，而且每次push都要输入口令。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="3-1、git关键字解释"><a href="#3-1、git关键字解释" class="headerlink" title="3.1、git关键字解释"></a>3.1、git关键字解释</h4><hr><p><code>HEAD</code> 当前版本的指针，当切换本地版本的时候会快速指向指定版本文件</p><p><code>master</code> git为我们创建主分支</p><p><code>origin</code> 远程仓库的名称</p><h4 id="3-2、git文件的四种状态"><a href="#3-2、git文件的四种状态" class="headerlink" title="3.2、git文件的四种状态"></a>3.2、git文件的四种状态</h4><p><img src="https://shuyancoding.oss-cn-beijing.aliyuncs.com/git%E6%96%87%E4%BB%B6%E5%9B%9B%E7%A7%8D%E7%8A%B6%E6%80%81.png" alt="image-20230925102448054"></p><ul><li>Untracked：未跟踪, 此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过git add 状态变为Staged.</li><li>Unmodify：文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致. 这种类型的文件有两种去处, 如果它被修改, 而变为Modified. 如果使用git rm移出版本库, 则成为Untracked文件</li><li>Modified：文件已修改, 仅仅是修改, 并没有进行其他的操作. 这个文件也有两个去处, 通过git add可进入暂存staged状态, 使用git checkout 则丢弃修改过, 返回到unmodify状态, 这个git checkout即从库中取出文件, 覆盖当前修改</li><li>Staged：暂存状态. 执行git commit则将修改同步到库中, 这时库中的文件和本地文件又变为一致, 文件为Unmodify状态. 执行git reset HEAD filename取消暂存, 文件状态为Modified</li></ul><h3 id="四、git常用命令"><a href="#四、git常用命令" class="headerlink" title="四、git常用命令"></a>四、git常用命令</h3><p><img src="https://shuyancoding.oss-cn-beijing.aliyuncs.com/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.png" alt="image-20230925102541185"></p><h4 id="4-1、init-amp-amp-clone"><a href="#4-1、init-amp-amp-clone" class="headerlink" title="4.1、init &amp;&amp; clone"></a>4.1、init &amp;&amp; clone</h4><p><code>git init</code> 在当前目录新建一个仓库</p><p><code>git init [project-name]</code> 在一个目录下新建本地仓库</p><p><code>git clone [url]</code> 克隆一个远程仓库</p><h4 id="4-2、diff"><a href="#4-2、diff" class="headerlink" title="4.2、diff"></a>4.2、diff</h4><hr><p><code>git diff HEAD -- .</code> 查看最新本地版本库和工作区所有文件的区别</p><p><code>git diff HEAD -- [file-name]</code> 查看最新本地版本库和工作区文件的却别</p><p><code>git diff HEAD^ -- [file-name]</code> 查看本地上一个版本和工作区文件的却别</p><p><code>git diff [local branch] origin/[remote branch]</code> 比较本地分支和远程分支的区别</p><h4 id="4-3、status"><a href="#4-3、status" class="headerlink" title="4.3、status"></a>4.3、status</h4><hr><p><code>git status [file-name]</code> 查看指定文件状态</p><p><code>git status</code> 查看所有文件状态</p><h4 id="4-4、add"><a href="#4-4、add" class="headerlink" title="4.4、add"></a>4.4、add</h4><hr><p><code>git add [file-name1] [file-name2] ...</code> 从工作区添加指定文件到暂存区</p><p><code>git add .</code> 将工作区的被修改的文件和新增的文件提交到暂存区，不包括被删除的文件</p><p><code>git add -u .</code> u指update，将工作区的被修改的文件和被删除的文件提交到暂存区，不包括新增的文件</p><p><code>git add -A .</code> A指all，将工作区被修改、被删除、新增的文件都提交到暂存区</p><h4 id="4-5、commit"><a href="#4-5、commit" class="headerlink" title="4.5、commit"></a>4.5、commit</h4><hr><ul><li><code>git commit -m [massage]</code> 将暂存区所有文件添加到本地仓库</li><li><code>git commit [file-name-1] [file-name-2] -m [massage]</code> 将暂存区指定文件添加到本地仓库</li><li><code>git commit -am [massage]</code> 将工作区的内容直接加入本地仓库</li><li><code>git commit --amend</code> 快速将当前文件修改合并到最新的commit，不会产生新的commit。<ul><li>在提交commit后发现还有部分文件修改忘记提交了可以是用该命令加<code>-m</code>是指直接在后面写上版本的注释，不加<code>-m</code>的话会用一个vim打开文件让你写入massage，有未追踪的文件将会失败，需要add加入暂存区。</li></ul></li></ul><hr><h4 id="4-6、clean"><a href="#4-6、clean" class="headerlink" title="4.6、clean"></a>4.6、clean</h4><ul><li><code>git clean -df</code> 加<code>-d</code>是指包含目录，加<code>-f</code>是指强制，删除所有未跟踪的文件</li></ul><hr><h4 id="4-7、log"><a href="#4-7、log" class="headerlink" title="4.7、log"></a>4.7、log</h4><ul><li><p><code>git log</code> 显示所有commit日志</p></li><li><p><code>git log --pretty=oneline</code> 将日志缩写为单行显示</p></li><li><p><code>git log --graph --pretty=oneline --abbrev-commit</code> 查看分支合并情况</p></li><li><p><code>git log --oneline --decorate --graph --all</code> 查看分叉历史，包括：提交历史、各个分支的指向以及项目的分支分叉情况。</p></li><li><p><code>git log -3</code> 查看最新3条commit日志数据</p></li></ul><hr><h4 id="4-8、reflog"><a href="#4-8、reflog" class="headerlink" title="4.8、reflog"></a>4.8、reflog</h4><p><code>git reflog</code> 显示操作本地版本库的命令，包括commit和reset等，在回退版本以后又后悔找不到commit id了可以使用此命令查看历史</p><hr><h5 id="4-9、push"><a href="#4-9、push" class="headerlink" title="4.9、push"></a>4.9、push</h5><ul><li><p><code>git push</code> 将文件添加到远程仓库</p></li><li><p><code>git push -f</code> 强制提交，当我们本地reset到旧的版本时，然后普通push会被拦截，因为此是本地HEAD指向比远程库还要旧</p></li><li><p><code>git push origin [branch-name]</code> 推送当前本地分支到指定远程分支</p></li></ul><hr><h4 id="4-10、rm"><a href="#4-10、rm" class="headerlink" title="4.10、rm"></a>4.10、rm</h4><p><code>git rm --cached [file-name]</code> 删除暂存区的文件</p><p><code>git rm -rf .</code> 不但删除所有暂存区的文件，还删除所有工作区的物理文件</p><hr><h4 id="4-11、checkout"><a href="#4-11、checkout" class="headerlink" title="4.11、checkout"></a>4.11、checkout</h4><pre class="line-numbers language-none"><code class="language-none">git checkout -- [file-name]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>最好加<code>--</code>，没有的话就把它当作切换分支看待，切换到另一个分支了，如果没有这个分支也会把它当作文件执行。</li><li>用暂存区的文件覆盖掉工作区的文件</li><li>如果暂存区没有可更新的就会用commit的文件更新工作区的文件</li></ul><p><code>git checkout [branch]</code> 切换分支</p><p><code>git checkout -b [new-branch-name]</code> 创建并切换分支</p><hr><h4 id="4-12、reset"><a href="#4-12、reset" class="headerlink" title="4.12、reset"></a>4.12、reset</h4><p><strong>当对整个版本进行操作</strong></p><pre class="line-numbers language-none"><code class="language-none">git reset --{soft|(mixed)|hard} HEAD<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>--soft</code> 其中可选参数soft表示单纯的切换HEAD指向的commit-id</li><li><code>--mixed</code> 默认值mixed参数表示先执行上面一步，然后再将commit-id里面的内容更新到暂存区</li><li><code>--hard</code> hard表示先执行上面两步，然后再将暂存区内容同步到工作区</li></ul><p><code>git reset --hard HEAD^^</code> 用上两个版本里的所有文件撤回到暂工作区</p><p><code>git reset --hard [commit id]</code> 用指定版本的所有文件撤回到工作区</p><p><strong>当对当个文件进行操作</strong></p><pre class="line-numbers language-none"><code class="language-none">git reset HEAD [file-name]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>对单个文件操作时候只能用mixed参数，而且还是可省略</li><li>对单个文件操作时候HEAD指向不会变</li><li>将commit中指定的文件同步到暂存区中</li></ul><p><code>git reset [commit-id] [file-name]</code> 将指定commit-id中的文件替换掉暂存区的文件</p><p><strong>切换分支的比较</strong></p><p><code>git reset [branch]</code> 切换分支，但这里的切换分支和上面的<code>git checkout [branch]</code>切换分支不同，下图说明：</p><p><img src="https://shuyancoding.oss-cn-beijing.aliyuncs.com/git%E5%88%86%E6%94%AF%E5%88%87%E6%8D%A2.png" alt="image-20230925102630453"></p><h4 id="4-13、revert"><a href="#4-13、revert" class="headerlink" title="4.13、revert"></a>4.13、revert</h4><pre class="line-numbers language-none"><code class="language-none">git revert -n [commit-id]git revert -n HEAD^^<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>撤回版本的比较</strong></p><ul><li>reset 切换版本是会删除丢弃最新的版本的，HEAD会直接跳到指定版本，但是还是可以通过reflog找回。</li></ul><p><img src="https://shuyancoding.oss-cn-beijing.aliyuncs.com/git%E6%92%A4%E5%9B%9E%E7%89%88%E6%9C%AC%E6%AF%94%E8%BE%83.png" alt="image-20230925102718544"></p><ul><li>revert 会将指定的bug版本视为bug版，会将当前版本中的bug版的代码删除，生成新的commit覆盖掉当前commit，但是commit-id是不会变的。</li></ul><p><img src="https://shuyancoding.oss-cn-beijing.aliyuncs.com/git%E7%9A%84revert%E5%91%BD%E4%BB%A4.png" alt="image-20230925102926761"></p><h4 id="4-14、branch"><a href="#4-14、branch" class="headerlink" title="4.14、branch"></a>4.14、branch</h4><p><code>git branch [branch-name]</code> 创建分支</p><p><code>git branch</code> 查看当前分支</p><p><code>git branch -a</code> 查看本地和远程的所有分支</p><p><code>git branch -r</code> 查看远程所有分支</p><p><code>git branch -d [branch-name]</code> 删除一个分支</p><p><code>git branch -D [branch-name]</code> 强制删除一个没有合并的分支</p><p><code>git branch --set-upstream-to=origin/[branch-name] [branch-name]</code> 把本地分支和远程分支进行连接</p><hr><h4 id="4-15、merge"><a href="#4-15、merge" class="headerlink" title="4.15、merge"></a>4.15、merge</h4><p><code>git merge</code> 合并本地<code>origin/[branch-name]</code>和<code>HEAD-&gt;[branch-name]</code>的代码，并同步到工作空间</p><p><code>git merge [branch-name]</code> 用于合并指定分支到当前分支</p><p><code>git merge --quit</code> 退出当前分支合并，当合并后冲突很多，要撤回合并分支就可以用这个命令</p><p><code>git merge --no-ff -m [massage] [branch-name]</code> 不使用Fast forward合并分支，这样会创建新的commit，所以需要massage。这样被合并的分支HEAD指向是会变的。</p><ul><li>如果使用了Fast forward方式合并分支，那么删除次要分支的时候历史分支记录也会被删除，这样就无法追寻分支合拼信息了。</li></ul><hr><h4 id="4-16、switch"><a href="#4-16、switch" class="headerlink" title="4.16、switch"></a>4.16、switch</h4><p><code>git switch -c [branch-name]</code> 创建新分支并切换到该分支</p><p><code>git switch [branch-name]</code> 切换到已有分支</p><hr><h4 id="4-17、stash"><a href="#4-17、stash" class="headerlink" title="4.17、stash"></a>4.17、stash</h4><p><code>git stash</code> 隐藏当前工作的修改</p><ul><li>如果不隐藏自己修改的半成品代码，就会发生切换到别的分支后，将然后自己的半成品代码带入其他分支，这样就发生很多不必要的麻烦。</li></ul><p><code>git stash save message</code> 执行存储时，添加备注，方便查找，只有git stash 也要可以的，但查找时不方便识别。</p><p><code>git stash list</code> 查看隐藏的工作信息列表</p><p><code>git stash drop</code> 删除隐藏的工作信息</p><p><code>git stash pop</code> 恢复隐藏的工作信息，同时删除隐藏的工作信息</p><p><code>git stash apply [stash@{0}]</code> 恢复指定的隐藏工作信息，但是不会删除隐藏的工作信息</p><hr><h4 id="4-18、cherry-pick"><a href="#4-18、cherry-pick" class="headerlink" title="4.18、cherry-pick"></a>4.18、cherry-pick</h4><p><code>git cherry-pick [commit-id]</code> 这个是复制一次commit提交，然后在当前分支上重新提交一遍；也就是将指定commit的合并到当前分支；</p><ul><li>这种适用于在其他分支上修复了bug，但是这个bug在当前分支上依然存在，所以可以复制这个commit的过程，不必重写代码。</li></ul><h4 id="4-19、remote"><a href="#4-19、remote" class="headerlink" title="4.19、remote"></a>4.19、remote</h4><p><code>git remote add origin 远程地址</code> 关联远程仓库</p><p><code>git remote</code> 查看本地添加了哪些远程分支地址</p><p><code>git remote -v</code> 查看本地添加了哪些远程分支地址更详细信息</p><p><code>git remote remove origin</code> 删除本地指定的远程地址</p><hr><h4 id="4-20、fetch"><a href="#4-20、fetch" class="headerlink" title="4.20、fetch"></a>4.20、fetch</h4><pre class="line-numbers language-none"><code class="language-none">git fetch` 拉取远程分支最新的commit到本地仓库的`origin/[branch-name]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h4 id="4-21、pull"><a href="#4-21、pull" class="headerlink" title="4.21、pull"></a>4.21、pull</h4><p><code>git pull</code> 从远程仓库拉取代码到工作空间</p><p><strong>pull 和 fetch的关系</strong></p><ul><li><code>git pull</code> == <code>git fetch</code> + <code>git merge</code></li></ul><hr><h4 id="4-22、tag"><a href="#4-22、tag" class="headerlink" title="4.22、tag"></a>4.22、tag</h4><p><code>git tag</code> 查看所有标签</p><p><code>git tag [version]</code> 给当前最新的commit打上标签</p><p><code>git tag [version] [commit-id]</code> 给指定的commit-id打上标签</p><p><code>git tag -a [version] -m [massage] [commit-id]</code> 给指定的commit-id打上标签并附上说明文字</p><p><code>git tag -d [version]</code> 删除标签</p><hr><h4 id="4-23、show"><a href="#4-23、show" class="headerlink" title="4.23、show"></a>4.23、show</h4><p><code>git show [tag-name]</code> 查看标签的详细信息</p><hr><h4 id="4-24、rebase"><a href="#4-24、rebase" class="headerlink" title="4.24、rebase"></a>4.24、rebase</h4><p><code>git rebase -i HEAD~2</code> 合并前两个历史提交，会弹出vim修改信息，修改第二行的pick为s，或者为squash，squash为合并的意识，然后保存退出编辑，会打开第二个vim编辑，合并并修改commit内容，保存退出会产生一个新的commit id，这样就合并了两个commit</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Hexo</title>
      <link href="/2023/09/24/hello-world/"/>
      <url>/2023/09/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="头部设置"><a href="#头部设置" class="headerlink" title="头部设置"></a>头部设置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">title: 文章名称date: <span class="token number">2021</span>-09-01 09:36:05tags: <span class="token punctuation">[</span>标签1,标签2<span class="token punctuation">]</span>categories: - <span class="token string">"类别"</span>- <span class="token string">"子类别"</span>comments: <span class="token boolean">true</span> <span class="token comment"># 是否可评论</span>toc: <span class="token boolean">true</span> <span class="token comment"># 是否显示文章目录</span>top: <span class="token boolean">true</span> <span class="token comment"># 置顶设置</span><span class="token comment"># 设置图片</span>cover: /img/hello-world.jpgcoverWidth: <span class="token number">1200</span>coverHeight: <span class="token number">750</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="友链格式"><a href="#友链格式" class="headerlink" title="友链格式"></a>友链格式</h3><pre class="line-numbers language-none"><code class="language-none">- [![标题](https://example.com/logo.png)](https://example.com/ "标题")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://shuyancoding.oss-cn-beijing.aliyuncs.com/1.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
